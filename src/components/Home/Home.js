import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import AnimatedBackground from '../Shared/AnimatedBackground';
import FloatingElements from '../Shared/FloatingElements';
import Confetti from '../Shared/Confetti';
import './Home.css';

const Home = () => {
  const [complimentCount, setComplimentCount] = useState(0);
  const [smileCount, setSmileCount] = useState(0);
  const [showModal, setShowModal] = useState(false);
  const [showConfetti, setShowConfetti] = useState(false);
  const [currentSubtitle, setCurrentSubtitle] = useState("–ò –≤–æ–æ–±—â–µ —Ç—ã —Å–∞–º–∞—è –ª—É—á—à–∞—è! üå∏");
  const [hearts, setHearts] = useState([]);

  const compliments = [
    "–¢—ã —É–º–Ω–∏—á–∫–∞!!! üíñ",
    "–¢—ã —Å–∏—è–µ—à—å —è—Ä—á–µ –∑–≤–µ–∑–¥! ‚ú®",
    "–¢–≤–æ—è —É–ª—ã–±–∫–∞ –¥–µ–ª–∞–µ—Ç –º–∏—Ä –ª—É—á—à–µ! üòä",
    "–¢—ã –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—à—å –º–µ–Ω—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å! üå∏",
    "–¢—ã —Å–∞–º–∞—è –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–∞—è! üí´",
    "–¢–≤–æ–µ —Å–µ—Ä–¥—Ü–µ –ø–æ–ª–Ω–æ –¥–æ–±—Ä–æ—Ç—ã! üíï",
    "–¢—ã –¥–µ–ª–∞–µ—à—å –≤—Å–µ –≤–æ–∫—Ä—É–≥ –∫—Ä–∞—Å–∏–≤–µ–µ! üå∫",
    "–¢–≤–æ—è —ç–Ω–µ—Ä–≥–∏—è –∑–∞—Ä—è–∂–∞–µ—Ç –ø–æ–∑–∏—Ç–∏–≤–æ–º! ‚ö°"
  ];

  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ —Å—á–µ—Ç—á–∏–∫–æ–≤ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  useEffect(() => {
    const animateCounter = (setter, target, duration = 2000) => {
      let start = 0;
      const increment = target / (duration / 16);
      
      const timer = setInterval(() => {
        start += increment;
        if (start >= target) {
          setter(Math.floor(target));
          clearInterval(timer);
        } else {
          setter(Math.floor(start));
        }
      }, 16);
    };

    animateCounter(setComplimentCount, 42);
    animateCounter(setSmileCount, 128);
  }, []);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ª–µ—Ç–∞—é—â–∏—Ö —Å–µ—Ä–¥–µ—á–µ–∫
  const createHearts = () => {
    const newHearts = [];
    for (let i = 0; i < 15; i++) {
      newHearts.push({
        id: i,
        left: Math.random() * 100,
        delay: Math.random() * 2,
        size: Math.random() * 20 + 10
      });
    }
    setHearts(newHearts);
    
    // –£–¥–∞–ª—è–µ–º —Å–µ—Ä–¥–µ—á–∫–∏ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => setHearts([]), 3000);
  };

  const handleMagicClick = () => {
    const randomCompliment = compliments[Math.floor(Math.random() * compliments.length)];
    setCurrentSubtitle(randomCompliment);
    setComplimentCount(prev => prev + 1);
    setShowConfetti(true);
    
    setTimeout(() => setShowConfetti(false), 3000);
  };

  const handleLoveClick = () => {
    setSmileCount(prev => prev + 1);
    createHearts();
  };

  const handleAvatarClick = () => {
    setShowModal(true);
  };

  return (
    <div className="home">
      <AnimatedBackground />
      <FloatingElements />
      {showConfetti && <Confetti />}

      {/* –õ–µ—Ç–∞—é—â–∏–µ —Å–µ—Ä–¥–µ—á–∫–∏ */}
      {hearts.map(heart => (
        <div
          key={heart.id}
          className="flying-heart"
          style={{
            left: `${heart.left}%`,
            animationDelay: `${heart.delay}s`,
            fontSize: `${heart.size}px`
          }}
        >
          üíñ
        </div>
      ))}

      <div className="container">
        {/* –ê–≤–∞—Ç–∞—Ä */}
        <div className="avatar-container">
          <div className="avatar-frame">
            <div className="avatar" onClick={handleAvatarClick}>
              üíñ {/* –ó–ê–ú–ï–ù–ò–õ–ò Font Awesome –Ω–∞ —ç–º–æ–¥–∑–∏ */}
            </div>
            <div className="avatar-glow"></div>
          </div>
        </div>

        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="text-container">
          <h1 className="main-title">
            <span className="title-word title-word-1">–¢—ã</span>
            <span className="title-word title-word-2">—É–º–Ω–∏—á–∫–∞</span>
            <span className="title-word title-word-3">!!!</span>
          </h1>
          <p className="subtitle">{currentSubtitle}</p>
        </div>

        {/* –ö–Ω–æ–ø–∫–∏ */}
        <div className="buttons-container">
          <button className="magic-btn" onClick={handleMagicClick}>
            <span className="btn-text">–í–æ–ª—à–µ–±—Å—Ç–≤–æ ‚ú®</span>
            <div className="btn-shine"></div>
          </button>

          <button className="love-btn" onClick={handleLoveClick}>
            üíñ {/* –ó–ê–ú–ï–ù–ò–õ–ò Font Awesome –Ω–∞ —ç–º–æ–¥–∑–∏ */}
            <span>–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª—é–±–æ–≤—å</span>
          </button>

          <Link to="/game">
            <button className="magic-btn">
              <span className="btn-text">–°—ã–≥—Ä–∞—Ç—å –≤ –∏–≥—Ä—É üéÆ</span>
              <div className="btn-shine"></div>
            </button>
          </Link>

          <Link to="/solitaire">
            <button className="magic-btn">
              <span className="btn-text">–ö–æ—Å—ã–Ω–∫–∞ üÉè</span>
              <div className="btn-shine"></div>
            </button>
          </Link>
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <div className="stats-container">
          <div className="stat-item">
            <div className="stat-number">{complimentCount}</div>
            <div className="stat-label">–∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–æ–≤</div>
          </div>
          <div className="stat-item">
            <div className="stat-number">{smileCount}</div>
            <div className="stat-label">—É–ª—ã–±–æ–∫</div>
          </div>
        </div>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ */}
      {showModal && (
        <div className="modal active">
          <div className="modal-content">
            <div className="modal-header">
              <h2>–°–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! üíå</h2>
              <button className="close-modal" onClick={() => setShowModal(false)}>
                &times;
              </button>
            </div>
            <div className="modal-body">
              <p>–ö–∞–∂–¥—ã–π –¥–µ–Ω—å —Å —Ç–æ–±–æ–π - —ç—Ç–æ –ø—Ä–∞–∑–¥–Ω–∏–∫! –¢—ã –¥–µ–ª–∞–µ—à—å –º–∏—Ä —è—Ä—á–µ –ø—Ä–æ—Å—Ç–æ —Å–≤–æ–∏–º –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ–º. üí´</p>
              <div className="message-heart">üíù</div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default Home;